---
version: '3.42.1'

dotenv: ['.env']

vars:
  INSPEC_DIR: tests/inspec
  REPO: https://raw.githubusercontent.com/sommerfeld-io/.github

includes:
  common: https://raw.githubusercontent.com/sommerfeld-io/.github/refs/heads/main/assets/task/common.yml

tasks:

  sync:assets-from-github:
    desc: 'Sync assets from the central sommerfeldio/.github repository'
    cmds:
      - echo "Syncing assets from the central sommerfeldio/.github repository..."
      - task: common:download
        vars: { DEST: ".github/copilot-instructions.md", URL: "{{ .REPO }}/refs/heads/main/.github/copilot-instructions.md" }
      - task: common:download
        vars: { DEST: ".github/workflows/housekeeping-issues.yml", URL: "{{ .REPO }}/refs/heads/main/.github/workflows/housekeeping-issues.yml" }
      - task: common:download
        vars: { DEST: ".github/workflows/housekeeping-labels.yml", URL: "{{ .REPO }}/refs/heads/main/.github/workflows/housekeeping-labels.yml" }

  # ===============================================================================================

  cleanup:
    desc: 'Cleanup the environment'
    cmds:
      - docker compose down --remove-orphans
      - rm -rf .cache
      - rm -rf node_modules
      - rm -rf target
      - for: &inspec-profiles ['devcontainer', 'ftp-client']
        cmd: |
          sudo rm -rf tests/inspec/{{ .ITEM }}/vendor
          sudo rm -rf tests/inspec/{{ .ITEM }}/inspec.lock
      - find . -type f -exec chmod +r {} +

  # ===============================================================================================

  lint:
    desc: 'Run all project linters outside of Dockerfile linters'
    cmds:
      - for: ['yaml', 'workflows', 'filenames', 'folders', 'markdown-links']
        cmd: docker compose up lint-{{ .ITEM }} --exit-code-from lint-{{ .ITEM }}

  inspec:check:
    desc: 'Vendor and check InSpec profile validity'
    cmds:
      - for: *inspec-profiles
        task: inspec:check:{{ .ITEM }}

  inspec:check:*:
    desc: 'Vendor and check InSpec profile validity'
    vars:
      PROFILE: '{{ index .MATCH 0 }}'
    cmds:
      - rm -f "{{ .INSPEC_DIR }}/{{ .PROFILE }}/inspec.lock"
      - docker compose run --rm inspec vendor "{{ .INSPEC_DIR }}/{{ .PROFILE }}" --overwrite --chef-license=accept
      - docker compose run --rm inspec check "{{ .INSPEC_DIR }}/{{ .PROFILE }}" --chef-license=accept

  # ===============================================================================================

  docs:generate:
    desc: 'Generate Markdown files for documentation'
    cmds:
      - echo "Collecting documentation from other Markdown files ..."
      - mkdir -p docs/container-images
      - task: common:copy
        vars: { SRC: docs/index.md, DEST: README.md }
      - task: common:copy
        vars: { SRC: docs/license.md, DEST: LICENSE.md }
      - for: &images ['devcontainer', 'folderslint', 'ftp-client', 'mkdocs']
        task: common:copy
        vars: { SRC: "components/{{ .ITEM }}/README.md", DEST: "docs/container-images/{{ .ITEM }}.md" }

  docs:run:
    desc: 'Run the documentation server'
    cmds:
      - task: docs:generate
      - docker compose up docs-dev-server

  # ===============================================================================================

  build:
    desc: 'Lint and build all container images'
    cmds:
      - for: *images
        task: build:{{ .ITEM }}

  build:*:
    desc: 'Lint and build container image | Replace * with image name (not path)'
    vars:
      IMAGE: '{{ index .MATCH 0 }}'
    cmds:
      - docker compose up {{ .IMAGE }}-lint-dockerfile --exit-code-from {{ .IMAGE }}-lint-dockerfile
      - docker compose build {{ .IMAGE }}

  # ===============================================================================================

  test:
    desc: 'Test all container images'
    cmds:
      - for: *inspec-profiles
        task: test:{{ .ITEM }}

  test:*:
    desc: 'Test container image | Replace * with image name'
    vars:
      IMAGE: '{{ index .MATCH 0 }}'
    cmds:
      - docker run --name "system-under-test-{{ .IMAGE }}" -d -v "$(pwd):$(pwd):ro" -w "$(pwd)" "local/{{ .IMAGE }}:dev" sleep 180s
      - sleep 5
      - docker compose run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "$(pwd):$(pwd)" -w "$(pwd)" inspec exec "{{ .INSPEC_DIR }}/{{ .IMAGE }}" --target "docker://system-under-test-{{ .IMAGE }}" --no-distinct-exit --chef-license=accept
      - sleep 5
      - docker stop "system-under-test-{{ .IMAGE }}"
      - docker rm "system-under-test-{{ .IMAGE }}"
