---
version: '3.42.1'

vars:
  INSPEC_IMAGE: chef/inspec:5.22.76
  INSPEC_DIR: tests/inspec

tasks:

  cleanup:
    desc: 'Cleanup the environment'
    cmds:
      - docker compose up cleanup
      - docker compose down --remove-orphans

  # ===============================================================================================

  lint:
    desc: 'Run all project linters outside of Dockerfile linters'
    cmds:
      - for:
          matrix:
            LINTER: ['yaml', 'workflows', 'filenames', 'folders', 'markdown-links']
        cmd: docker compose up lint-{{.ITEM.LINTER}} --exit-code-from lint-{{.ITEM.LINTER}}

  check:inspec:all:
    desc: 'Vendor and check InSpec profile validity'
    cmds:
      - for: &test-inspec ['devcontainer', 'ftp-client']
        task: check:inspec:{{.ITEM}}

  check:inspec:*:
    desc: 'Vendor and check InSpec profile validity'
    vars:
      PROFILE: '{{index .MATCH 0}}'
    cmds:
      - rm -f "{{.INSPEC_DIR}}/{{.PROFILE}}/inspec.lock"
      - docker run --rm -v "$(pwd):$(pwd)" -w "$(pwd)" "{{.INSPEC_IMAGE}}" vendor "{{.INSPEC_DIR}}/{{.PROFILE}}" --overwrite --chef-license=accept
      - docker run --rm -v "$(pwd):$(pwd)" -w "$(pwd)" "{{.INSPEC_IMAGE}}" check "{{.INSPEC_DIR}}/{{.PROFILE}}" --chef-license=accept

  # ===============================================================================================

  docs:run:
    desc: 'Run the documentation server'
    cmds:
      - docker compose up docs-dev-server

  # ===============================================================================================

  build:all:
    desc: 'Lint and build all container images'
    cmds:
      - for: &images ['devcontainer', 'folderslint', 'ftp-client', 'mkdocs']
        task: build:{{.ITEM}}

  build:*:
    desc: 'Lint and build container image | Replace * with image name'
    vars:
      IMAGE: '{{index .MATCH 0}}'
    cmds:
      - docker compose up {{.IMAGE}}-lint-dockerfile --exit-code-from {{.IMAGE}}-lint-dockerfile
      - docker compose build {{.IMAGE}}

  # ===============================================================================================

  test:all:
    desc: 'Test all container images'
    cmds:
      - for: *test-inspec
        task: test:{{.ITEM}}

  test:*:
    desc: 'Test container image | Replace * with image name'
    vars:
      IMAGE: '{{index .MATCH 0}}'
    cmds:
      - docker run --name "sut-{{.IMAGE}}" -d -v "$(pwd):$(pwd):ro" -w "$(pwd)" "local/{{.IMAGE}}:dev" sleep 180s
      - sleep 5
      - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "$(pwd):$(pwd)" -w "$(pwd)" "{{.INSPEC_IMAGE}}" exec "{{.INSPEC_DIR}}/{{.IMAGE}}" --target "docker://sut-{{.IMAGE}}" --no-distinct-exit --chef-license=accept
      - sleep 5
      - docker stop "sut-{{.IMAGE}}"
      - docker rm "sut-{{.IMAGE}}"
